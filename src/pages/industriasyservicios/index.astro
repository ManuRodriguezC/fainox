---
import LayoutPage from "../../layouts/LayoutPage.astro";
import { industrias } from "../../store/industrias";
import { productos } from "../../store/productos";
import Producto from "../../components/industrias/producto.astro";
import ArrowRight from "../../icons/arrowRight.astro";
import ArrowLeft from "../../icons/arrowLeft.astro";
import { subIndustrys } from "../../store/subIndustrys";
import { capitalize } from "../../utils/capitalize";
---

<LayoutPage title="Fainox Group en todas las industrias">
  <section id="content-info" class="flex flex-col w-full gap-10 px-0 lg:px-10 mt-24 md:mt-36">
    {
      industrias.map((industry, index) => {
        if (industry.type === "link") {
          const productsInIndustry = productos.filter((product) =>
            product.industry.includes(industry.name)
          );
          return (
            <div class="flex flex-col">
              <a
                href={`/industriasyservicios/${industry.name}`}
                class="text-white rounded-md text-2xl lg:text-3xl xl:text-4xl text-center hover:bg-blue-800 hover:shadow-xl transition-all duration-150 font-semibold bg-colorBlue px-4 py-2"
              >
                Industria - {industry.name}
              </a>
              {subIndustrys[industry.name].map((typeSubIndustry, indexx) => {
                const filterSubIndustry = productsInIndustry.filter(
                  (typeProduct) => typeProduct.subIndustry === typeSubIndustry.name
                );
                return (
                  <div class="indu">
                    <h3 class="text-xl lg:text-2xl xl:text-3xl font-bold text-center md:ml-10 py-4 text-colorBlue">{capitalize(typeSubIndustry.name)}</h3>
                    <div class="w-95vw flex flex-row justify-between items-center">
                      <button
                        id={`left-${index}-${indexx}`}
                        class="hidden md:block md:w-[5%] h-28 hover:scale-105 transition-all duration-100 left no-display"
                        >
                        <ArrowLeft />
                      </button>

                      <div
                        id={`product-container-${index}-${indexx}`}
                        class="flex flex-row gap-4 overflow-y-hidden scroll-hidden p-6 md:pr-96 w-full md:w-[74%] lg:w-[85%]"
                        >
                          <img src={typeSubIndustry.image} class="hidden sm:block w-[350px] aspect-square object-cover shadow-box-black rounded-md" alt={typeSubIndustry.name} />
                          
                          {filterSubIndustry.map((productFilter) => (
                            <Producto {...productFilter} />
                          ))}
                      </div>

                      <button
                        id={`right-${index}-${indexx}`}
                        class="hidden md:block md:w-[5%] w-[5%] h-28 hover:scale-105 transition-all duration-100 right"
                        >
                        <ArrowRight />
                      </button>
                    </div>
                  </div>
                );
              })}
            </div>
          );
        }
      })
    }
  </section>

  <script>
    const rightButtons = document.querySelectorAll(".right");

    rightButtons.forEach((element) => {
      let scrollInterval: any;

      element.addEventListener("mouseenter", () => {
        const [industryIndex, subIndustryIndex] = element.id.split('-').slice(1);
        const productContainer = document.getElementById(`product-container-${industryIndex}-${subIndustryIndex}`)

        scrollInterval = setInterval(() => {
          if (productContainer) {
            const { scrollLeft, scrollWidth, clientWidth } = productContainer;
            const curButtonLeft = document.getElementById(`left-${industryIndex}-${subIndustryIndex}`);
            const curButtonRight = document.getElementById(`right-${industryIndex}-${subIndustryIndex}`);

            productContainer?.scrollBy({
              top: 0,
              left: 300,
              behavior: "smooth",
            });

            if (scrollLeft > 0) {
              if (curButtonLeft) {
                curButtonLeft.classList.remove("no-display");
              }
            }
            if (clientWidth + scrollLeft >= scrollWidth - 250) {
              if (curButtonRight) {
                curButtonRight.classList.add("no-display");
              }
            }
          }
        }, 500);
      });

      element.addEventListener("mouseleave", () => {
        clearInterval(scrollInterval);
      });
    });

    const leftButtons = document.querySelectorAll(".left");

    leftButtons.forEach((element) => {
      let scrollInterval: any;

      element.addEventListener("mouseenter", () => {
        const [industryIndex, subIndustryIndex] = element.id.split('-').slice(1);
        const productContainer = document.getElementById(
          `product-container-${industryIndex}-${subIndustryIndex}`
        );

        scrollInterval = setInterval(() => {
          if (productContainer) {
            const { scrollLeft } = productContainer;
            const curButtonLeft = document.getElementById(`left-${industryIndex}-${subIndustryIndex}`);
            const curButtonRight = document.getElementById(`right-${industryIndex}-${subIndustryIndex}`);

            productContainer?.scrollBy({
              top: 0,
              left: -300,
              behavior: "smooth",
            });

            if (scrollLeft == 0) {
              if (curButtonLeft) {
                curButtonLeft.classList.add("no-display");
              }
            }
            if (scrollLeft > 0) {
              if (curButtonRight) {
                curButtonRight.classList.remove("no-display");
              }
            }
          }
        }, 500);
      });

      element.addEventListener("mouseleave", () => {
        clearInterval(scrollInterval);
      });
    });
  </script>
</LayoutPage>
